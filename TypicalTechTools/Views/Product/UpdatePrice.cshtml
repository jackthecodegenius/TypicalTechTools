@model TypicalTechTools.Models.Product

@{
    ViewData["Title"] = "Update Price";
}

<h1>Update Price for @Model.ProductName        </h1>
<span>ID:@Model.ProductCode</span>

<hr />
<div class="row">
    <div class="col-md-4">
        <!-- The form posts to the "UpdatePrice" action in the "Product" controller -->
        <form asp-action="UpdatePrice" asp-controller="Product" method="post" style="display:inline;">

            <!-- displays form-level validation errors if any validation fails -->
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(c => c.ProductCode)

            <div class="form-group">
                <label asp-for="ProductPrice" class="control-label">Current Price</label>
                <!-- input field for the ProductPrice client-side validation is applied based on model validation rules -->
                <input asp-for="ProductPrice" class="form-control" />
                <!-- displays client-side validation errors specifically for the ProductPrice field -->
                <span asp-validation-for="ProductPrice" class="text-danger"></span>
            </div>

            <div class="form-group">
                <!-- submit button to submit the form -->
                <input type="submit" value="Update Price" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to Product List", "Index", "Product", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    <!-- Loads client side validation scripts including jQuery validation -->
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
