@using System.Security.Claims
@model TypicalTechTools.Models.Comment

@{
    ViewData["Title"] = "AddComment";

    var loggedInUserId = int.Parse(User.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? "0");

}

<h1>Add a Comment for product: @Model.product_code.ToString()</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddComment" asp-controller="Comment" method="post" style="display:inline;">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="comment_text" class="control-label">Comment Text</label>
                <input asp-for="comment_text" class="form-control" />
                <input  type="hidden" asp-for="UserId" value="@loggedInUserId" class="form-control" />
                
                <span asp-validation-for="comment_text" class="text-danger"></span>
            </div>
            @Html.HiddenFor(c => c.product_code)
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <!-- Redirect back to a list of all comments -->

    @Html.ActionLink("Back to Comments", "CommentList", "Comment", new { productCode = Model.product_code }, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
