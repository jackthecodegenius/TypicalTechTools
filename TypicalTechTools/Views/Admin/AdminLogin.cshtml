@model TypicalTechTools.Models.DTOs.LoginDTO

@{
    ViewData["Title"] = "Admin Login";
    bool Authenticated = Context.User.Identity.IsAuthenticated;


    bool isRequiredRole = Context.User.IsInRole("ADMIN");
}

<h1>Login</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        @if (!Authenticated)
        {
            <form asp-action="AdminLogin">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="UserName" class="control-label"></label>
                    <input asp-for="UserName" class="form-control" type="text" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" type="password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                @Html.HiddenFor(Model => Model.ReturnURL)
                <div class="form-group">
                    <input type="submit" value="Login" class="btn btn-primary" />
                </div>
                @if (ViewBag.LoginMessage != null)
                {
                    <div class="text-danger">@ViewBag.LoginMessage</div>
                }
            </form>
        }
        else
        {
            <p>You are already logged in.</p>
            <form asp-action="Logoff" method="post">
                <button type="submit" class="btn btn-danger">Logout</button>
            </form>
        }
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
